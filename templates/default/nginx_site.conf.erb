# THIS FILE HAS BEEN GENERATED BY CHEF
# ANY MANUAL MODIFICATIONS WILL BE OVERWRITTEN
<% 
def attribute_iterate(attribute, prefix = attribute)
    statements = ""
    
    @resource.send(attribute).each do |rule|
        statements += "\n    #{prefix} #{rule};"
    end

    return statements
end %>

server {
<%= attribute_iterate('listen') %>

    server_name <%= @resource.server_name.is_a?(Array) ? @resource.server_name.join(' ') : @resource.server_name %>;

    client_max_body_size <%= @resource.client_max_body_size %>;
    keepalive_timeout <%= @resource.keepalive_timeout %>;

    <% if @resource.ssl_enabled %>
    ssl_certificate <%= node[:nginx][:cert_dir] %>/<%= @resource.application.name %>.pem;
    ssl_certificate_key <%= node[:nginx][:cert_dir] %>/<%= @resource.application.name %>.key;
    <% end %> 

    root <%= @resource.public_path %>;  

    access_log <%= node[:nginx][:log_dir] %>/<%= @resource.application.name %>.access.log;
    error_log <%= node[:nginx][:log_dir] %>/<%= @resource.application.name %>.error.log;

    <% unless @resource.proxy_port.empty? %>
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        <% if @resource.ssl_enabled %>
        proxy_set_header X_FORWARDED_PROTO $scheme;
        <% end %>

        # If you don't find the filename in the static files
        # Then request it from the unicorn server
        if (!-f $request_filename) {
            proxy_pass http://localhost:<%= @resource.proxy_port %>;
            break;
        }
    }
    <% end %>

<% ['rewrite', 'error_page', ['inc', 'include']].each do |attribute| %>
<% unless @resource.send(attribute).empty? %>
<%= attribute_iterate(attribute) %>
<% end %>
<% end %>
}
